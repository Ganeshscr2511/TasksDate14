const scores = [
  {
    marks: 32,
    name: "Yvette Merritt"
  },
  {
    marks: 57,
    name: "Lillian Ellis"
  },
  {
    marks: 22,
    name: "Mccall Carter"
  },
  {
    marks: 21,
    name: "Pate Collier"
  },
  {
    marks: 91,
    name: "Debra Beard"
  },
  {
    marks: 75,
    name: "Nettie Hancock"
  },
  {
    marks: 20,
    name: "Hatfield Hodge"
  }
];

// Task 1
const namesOfEveryone= scores.map( names =>  names.name );
console.log(namesOfEveryone);

// Task 2
const studentPassed=scores.filter( student => {
   if(student.marks >= 40){
     return student
   }
})
console.log(studentPassed);

// Task 3
const studentFailed=scores.filter( student => student.marks < 40).map(student => student.name)
console.log(studentFailed);

//Task 4
const averageMarks=scores.reduce((previousValue, currentValue) => {
  return previousValue + currentValue.marks;  
},0)/scores.length;
console.log(averageMarks);

// Task 5
const {name , marks}=scores.reduce((prev, current) => {
  let top = prev.marks > current.marks ?   prev : current;
  return top;
},1);
console.log(name);

// Task 6 Lodash Functions

// intersection
// let a=[1,2,3,4,5,6];
// let b=[9,8,7,2,3,5];
// let difference = a.filter(x => b.includes(x));
// console.log(difference);

// unique
// let c=[1,3,5,2,3,1,6,5];
// var unique = c.filter((v, i, a) => a.indexOf(v) === i);
// console.log(unique);

// without
// let a=[1,2,3,4,5];
// let b=[1,2];
// var without= a.filter( v => !b.includes(v) );
// console.log(without);


// class Task on 18/10/21

class Bank{
  constructor(name, accountType, accountNo, balance){
    this.name=name;
    this.accountType=accountType;
    this.accountNo=accountNo;
    this.balance=balance;
  }
  getBalance(){
    return "your balance is "+ this.balance;
  }
  debit(money){
    let debit= this.balance + money;
    this.balance=debit;
    return "your balance is " + debit;
  }
  credit(money){
    if(money<=this.balance){
      let credit= this.balance - money;
      this.balance=credit;
      return "your balance is " + credit;
    }
    else{
      return "Insufficient Balance , Your Balance is " + this.balance;
    }
  }
}

const sourabh = new Bank("Sourabh", "Savings", 400023, 25000);
const lokesh = new Bank("Lokesh", "Savings", 400024, 10000);
const suriya = new Bank("Suriya", "Current", 400025, 100000);
const asritha = new Bank("Asritha", "Savings", 400026, 20000);

// console.log(sourabh,lokesh,suriya,asritha);

console.log(suriya.credit(200000));
console.log(suriya.credit(20000));
console.log(suriya.getBalance());
console.log(sourabh.getBalance());
console.log(sourabh.debit(10000));
console.log(sourabh.getBalance());
